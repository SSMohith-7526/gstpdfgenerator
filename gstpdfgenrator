import os
import tkinter as tk
from tkinter import *
from reportlab.pdfgen import canvas
from tkinter import filedialog

# Create the Invoice Generator Class
class InvoiceGenerator:
    def __init__(self, root):
        self.root = root
        self.root.title("Invoice Generator By DataFlair")
        self.root.geometry("750x800")

        self.frame = Frame(self.root, bg="white")
        self.frame.place(x=80, y=20, width=600, height=700)

        Label(self.frame, text="Enter your company details", font=("times new roman", 30, "bold"), bg="white", fg="green", bd=0).place(x=50, y=10)

        # Adding labels and input fields
        self.create_label_and_entry("Company Name", 80)
        self.create_label_and_entry("Address", 140)
        self.create_label_and_entry("City", 200)
        self.create_label_and_entry("GST Number", 260)
        self.create_label_and_entry("Date", 320)
        self.create_label_and_entry("Contact", 380)
        self.create_label_and_entry("Customer Name", 440)
        self.create_label_and_entry("Authorized Signatory", 500)

        # Browse file button
        Label(self.frame, text="Company Image", font=("times new roman", 15, "bold"), bg="white", fg="gray").place(x=50, y=560)
        Button(self.frame, text="Browse Files", font=("times new roman", 14), command=self.browse).place(x=270, y=560)

        # Submit button
        Button(self.frame, text="Submit Details", command=self.generate_invoice, font=("times new roman", 14), fg="white", cursor="hand2", bg="#B00857").place(x=50, y=640, width=180, height=40)

    # Function to create label and entry fields
    def create_label_and_entry(self, text, y_position):
        Label(self.frame, text=text, font=("times new roman", 15, "bold"), bg="white", fg="gray").place(x=50, y=y_position)
        entry = Entry(self.frame, font=("times new roman", 15), bg="light grey")
        entry.place(x=270, y=y_position, width=300, height=35)
        setattr(self, text.replace(" ", "_").lower(), entry)

    # Browse function to select the image
    def browse(self):
        self.file_name = filedialog.askopenfilename(title="Select a File")
        Label(self.frame, text=os.path.basename(self.file_name), font=("times new roman", 15)).place(x=270, y=600)

    # Generate invoice function
    def generate_invoice(self):
        # Make sure the file_name is defined
        if not hasattr(self, 'file_name') or not self.file_name:
            print("Error: No image selected")
            return

        # Ensure that all fields are populated
        company_name = getattr(self, "company_name", None)
        address = getattr(self, "address", None)
        city = getattr(self, "city", None)
        gst = getattr(self, "gst_number", None)
        date = getattr(self, "date", None)
        contact = getattr(self, "contact", None)
        c_name = getattr(self, "customer_name", None)
        aus = getattr(self, "authorized_signatory", None)

        # Check if all fields have been filled out
        if not (company_name and address and city and gst and date and contact and c_name and aus):
            print("Error: All fields must be filled out")
            return

        # Create the PDF
        c = canvas.Canvas("Invoice_by_DataFlair.pdf", pagesize=(200, 250), bottomup=0)
        c.setFillColorRGB(0.8, 0.5, 0.7)

        # Draw lines for the invoice layout
        c.line(70, 22, 180, 22)
        c.line(5, 45, 195, 45)
        c.line(15, 120, 185, 120)
        c.line(35, 108, 35, 220)
        c.line(115, 108, 115, 220)
        c.line(135, 108, 135, 220)
        c.line(160, 108, 160, 220)
        c.line(15, 220, 185, 220)

        # Adding company information
        c.translate(10, 40)
        c.scale(1, -1)

        # Make sure the file is available and use it
        if os.path.exists(self.file_name):
            c.drawImage(self.file_name, 0, 0, width=50, height=30)

        c.scale(1, -1)
        c.translate(-10, -40)

        c.setFont("Times-Bold", 10)
        c.drawCentredString(125, 20, company_name.get())
        c.setFont("Times-Bold", 5)
        c.drawCentredString(125, 30, address.get())
        c.drawCentredString(125, 35, city.get() + ", India")
        c.setFont("Times-Bold", 6)
        c.drawCentredString(125, 42, "GST No:" + gst.get())

        c.setFont("Times-Bold", 8)
        c.drawCentredString(100, 55, "INVOICE")

        # Adding other details to the invoice
        c.setFont("Times-Bold", 5)
        c.drawRightString(70, 70, "Invoice No. :")
        c.drawRightString(100, 70, "XXXXXXX")
        c.drawRightString(70, 80, "Date :")
        c.drawRightString(100, 80, date.get())
        c.drawRightString(70, 90, "Customer Name :")
        c.drawRightString(100, 90, c_name.get())
        c.drawRightString(70, 100, "Phone No. :")
        c.drawRightString(100, 100, contact.get())

        # Finalizing the invoice layout
        c.roundRect(15, 108, 170, 130, 10, stroke=1, fill=0)
        c.drawCentredString(25, 118, "S.No.")
        c.drawCentredString(75, 118, "Orders")
        c.drawCentredString(125, 118, "Price")
        c.drawCentredString(148, 118, "Qty.")
        c.drawCentredString(173, 118, "Total")

        c.drawString(30, 230, "This is system generated invoice!!")
        c.drawRightString(180, 228, aus.get())
        c.drawRightString(180, 235, "Signature")

        c.showPage()
        c.save()

# Main function
def main():
    root = Tk()
    obj = InvoiceGenerator(root)
    root.mainloop()

if __name__ == "__main__":
    main()
